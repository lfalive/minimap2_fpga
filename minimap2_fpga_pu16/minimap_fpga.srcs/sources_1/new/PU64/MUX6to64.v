module MUX6to64 #(
    parameter PE_NUM = 64,
    parameter LOG_PE_NUM = 6
    )
(
    //==========input===============//
    clk     ,
    rst_n   ,
    code_in ,
    //==========output===============//
    en_out
    );

input wire clk;
input wire rst_n;

input wire [LOG_PE_NUM-1:0] code_in;

output reg [PE_NUM-1:0] en_out;

always @(posedge clk or negedge rst_n) begin
    if(~rst_n) begin
        en_out <= 8'b0;
    end 
    else begin
        case (code_in)
        6'b000000 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000001;
        6'b000001 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000011;
        6'b000010 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000111;
        6'b000011 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00001111;
        6'b000100 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00011111;
        6'b000101 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00111111;
        6'b000110 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000000_00000000_01111111;
        6'b000111 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000000_00000000_11111111;
        6'b001000 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000000_00000001_11111111;
        6'b001001 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000000_00000011_11111111;
        6'b001010 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000000_00000111_11111111;
        6'b001011 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000000_00001111_11111111;
        6'b001100 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000000_00011111_11111111;
        6'b001101 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000000_00111111_11111111;
        6'b001110 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000000_01111111_11111111;
        6'b001111 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000000_11111111_11111111;

        6'b010000 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000001_11111111_11111111;
        6'b010001 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000011_11111111_11111111;
        6'b010010 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00000111_11111111_11111111;
        6'b010011 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00001111_11111111_11111111;
        6'b010100 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00011111_11111111_11111111;
        6'b010101 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_00111111_11111111_11111111;
        6'b010110 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_01111111_11111111_11111111;
        6'b010111 : en_out <= 64'b00000000_00000000_00000000_00000000_00000000_11111111_11111111_11111111;
        6'b011000 : en_out <= 64'b00000000_00000000_00000000_00000000_00000001_11111111_11111111_11111111;
        6'b011001 : en_out <= 64'b00000000_00000000_00000000_00000000_00000011_11111111_11111111_11111111;
        6'b011010 : en_out <= 64'b00000000_00000000_00000000_00000000_00000111_11111111_11111111_11111111;
        6'b011011 : en_out <= 64'b00000000_00000000_00000000_00000000_00001111_11111111_11111111_11111111;
        6'b011100 : en_out <= 64'b00000000_00000000_00000000_00000000_00011111_11111111_11111111_11111111;
        6'b011101 : en_out <= 64'b00000000_00000000_00000000_00000000_00111111_11111111_11111111_11111111;
        6'b011110 : en_out <= 64'b00000000_00000000_00000000_00000000_01111111_11111111_11111111_11111111;
        6'b011111 : en_out <= 64'b00000000_00000000_00000000_00000000_11111111_11111111_11111111_11111111;

        6'b100000 : en_out <= 64'b00000000_00000000_00000000_00000001_11111111_11111111_11111111_11111111;
        6'b100001 : en_out <= 64'b00000000_00000000_00000000_00000011_11111111_11111111_11111111_11111111;
        6'b100010 : en_out <= 64'b00000000_00000000_00000000_00000111_11111111_11111111_11111111_11111111;
        6'b100011 : en_out <= 64'b00000000_00000000_00000000_00001111_11111111_11111111_11111111_11111111;
        6'b100100 : en_out <= 64'b00000000_00000000_00000000_00011111_11111111_11111111_11111111_11111111;
        6'b100101 : en_out <= 64'b00000000_00000000_00000000_00111111_11111111_11111111_11111111_11111111;
        6'b100110 : en_out <= 64'b00000000_00000000_00000000_01111111_11111111_11111111_11111111_11111111;
        6'b100111 : en_out <= 64'b00000000_00000000_00000000_11111111_11111111_11111111_11111111_11111111;
        6'b101000 : en_out <= 64'b00000000_00000000_00000001_11111111_11111111_11111111_11111111_11111111;
        6'b101001 : en_out <= 64'b00000000_00000000_00000011_11111111_11111111_11111111_11111111_11111111;
        6'b101010 : en_out <= 64'b00000000_00000000_00000111_11111111_11111111_11111111_11111111_11111111;
        6'b101011 : en_out <= 64'b00000000_00000000_00001111_11111111_11111111_11111111_11111111_11111111;
        6'b101100 : en_out <= 64'b00000000_00000000_00011111_11111111_11111111_11111111_11111111_11111111;
        6'b101101 : en_out <= 64'b00000000_00000000_00111111_11111111_11111111_11111111_11111111_11111111;
        6'b101110 : en_out <= 64'b00000000_00000000_01111111_11111111_11111111_11111111_11111111_11111111;
        6'b101111 : en_out <= 64'b00000000_00000000_11111111_11111111_11111111_11111111_11111111_11111111;
       
        6'b110000 : en_out <= 64'b00000000_00000001_11111111_11111111_11111111_11111111_11111111_11111111;
        6'b110001 : en_out <= 64'b00000000_00000011_11111111_11111111_11111111_11111111_11111111_11111111;
        6'b110010 : en_out <= 64'b00000000_00000111_11111111_11111111_11111111_11111111_11111111_11111111;
        6'b110011 : en_out <= 64'b00000000_00001111_11111111_11111111_11111111_11111111_11111111_11111111;
        6'b110100 : en_out <= 64'b00000000_00011111_11111111_11111111_11111111_11111111_11111111_11111111;
        6'b110101 : en_out <= 64'b00000000_00111111_11111111_11111111_11111111_11111111_11111111_11111111;
        6'b110110 : en_out <= 64'b00000000_01111111_11111111_11111111_11111111_11111111_11111111_11111111;
        6'b110111 : en_out <= 64'b00000000_11111111_11111111_11111111_11111111_11111111_11111111_11111111;//55
        6'b111000 : en_out <= 64'b00000001_11111111_11111111_11111111_11111111_11111111_11111111_11111111;
        6'b111001 : en_out <= 64'b00000011_11111111_11111111_11111111_11111111_11111111_11111111_11111111;
        6'b111010 : en_out <= 64'b00000111_11111111_11111111_11111111_11111111_11111111_11111111_11111111;
        6'b111011 : en_out <= 64'b00001111_11111111_11111111_11111111_11111111_11111111_11111111_11111111;
        6'b111100 : en_out <= 64'b00011111_11111111_11111111_11111111_11111111_11111111_11111111_11111111;
        6'b111101 : en_out <= 64'b00111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111;
        6'b111110 : en_out <= 64'b01111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111;
        6'b111111 : en_out <= 64'b11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111;

        endcase
    end
end

endmodule